<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home Page</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .experiment {
      border: 1px solid #ddd;
      margin-bottom: 20px;
      padding: 10px;
      border-radius: 5px;
      transition: 0.3s;
    }
    .experiment:hover {
      box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
      cursor: pointer;
    }
    .experiment p {
      margin: 5px 0;
    }
    .video {
      padding-left: 20px;
    }
  </style>
</head>

<body>
  <div id="experiments-container">
    <!-- Experiments will be loaded dynamically here -->
  </div>

  <script>
    const getExperiments = async () => {
      try {
        const response = await fetch('https://curio.oli.cmu.edu/exps?' +
          new URLSearchParams({
            populated: true
          }), {
          method: "GET",
        });
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return await response.json();
      } catch (error) {
        console.error('Error:', error);
      }
    }
    const experimentsContainer = document.getElementById('experiments-container');
    const handleClick = (eid, bid) => {
      const [_, cid] = bid.split('-');
      window.open(`exps/${eid}/${cid}`, "_blank");
    }


    window.addEventListener('load', async () => {
      const experiments = await getExperiments();
      experiments.forEach(exp => {
        console.log(exp);
        const expElement = document.createElement('div');
        expElement.className = 'experiment';

        // Populate user data
        const user = document.createElement('p');
        user.innerText = `User: ${exp.user.externalID}, Nickname: ${exp.user.nickname}`;
        expElement.appendChild(user);

        // Populate videos data
        const videos = document.createElement('div');
        exp.videos.forEach(video => {
          const videoElement = document.createElement('p');
          videoElement.innerText = `Title: ${video.title}, Description: ${video.description}, Learning Objectives: ${video.learningObjs.join(', ')}`;
          videos.appendChild(videoElement);
        });
        expElement.appendChild(videos);

        // Populate order data
        const order = document.createElement('p');
        order.innerText = `Order: ${exp.order}`;
        expElement.appendChild(order);

        // Populate finishedAt data
        const finishedAt = document.createElement('p');
        finishedAt.innerText = `Finished At: ${exp.finishedAt || 'N.A.'}`;
        expElement.appendChild(finishedAt);

        [0, 1, 2, 3, 4].forEach(index => {
          b = document.createElement('button');
          b.id = `exp-${index}`;
          b.className += "start-exp";
          b.innerText = `Exp ${index}`;
          b.type="button"
          b.addEventListener('click', function(){
            handleClick(exp._id, this.id);
          });
          expElement.appendChild(b);
        });

        // Add event listener to start experiment
        expElement.addEventListener('click', () => {
            return;
        });

        experimentsContainer.appendChild(expElement);
      });
    })
  </script>
</body>

</html>
